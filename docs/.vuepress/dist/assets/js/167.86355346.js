(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{840:function(e,t,o){"use strict";o.r(t),o.d(t,"default",(function(){return E}));var r=o(337),i=o(504),l=o(353),s=(o(510),o(339)),a=o(423),n=o(345),c=o(358),y=o(341),p=(o(342),o(336),o(340),o(363)),b=o(338),u=o(355),d=o(374),h=o(421),j=o(482),O=o(450),v=o(446),S=o(530),m=o(454),f=o(412),g=o(539),w=o(580),C=o(689),k=o(645),G=o(619);const P=["atom","xml"],_={base:g.a,key:"type",typeMap:{"simple-line":w.a},errorContext:"symbol"},x={base:g.a,key:"type",typeMap:{"picture-marker":C.a,"simple-marker":k.a},errorContext:"symbol"},R={base:g.a,key:"type",typeMap:{"simple-fill":G.a},errorContext:"symbol"};let F=class extends(Object(j.a)(Object(S.a)(Object(O.a)(Object(v.a)(Object(m.a)(Object(a.a)(h.a))))))){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}readFeatureCollections(e,t){return t.featureCollection.layers.forEach(e=>{var t;const o=e.layerDefinition.drawingInfo.renderer.symbol;o&&"esriSFS"===o.type&&null!=(t=o.outline)&&t.style.includes("esriSFS")&&(o.outline.style="esriSLSSolid")}),t.featureCollection.layers}get hasPoints(){return this._hasGeometry("esriGeometryPoint")}get hasPolylines(){return this._hasGeometry("esriGeometryPolyline")}get hasPolygons(){return this._hasGeometry("esriGeometryPolygon")}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?Object(c.k)(this.url,P)||"GeoRSS":e||""}set title(e){this._set("title",e)}load(e){const t=Object(s.k)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(n.t).then(()=>this._fetchService(t)).then(e=>{this.read(e,{origin:"service"})})),Promise.resolve(this)}async hasDataChanged(){const e=await this._fetchService();return this.read(e,{origin:"service",ignoreDefaults:!0}),!0}async _fetchService(e){var t;const o=this.spatialReference,{data:r}=await Object(l.default)(i.a.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:Object(d.m)(o)?void 0:null!=(t=o.wkid)?t:JSON.stringify(o)},signal:e});return r}_hasGeometry(e){var t,o;return null!=(t=null==(o=this.featureCollections)?void 0:o.some(t=>{var o,r;return(null==(o=t.featureSet)?void 0:o.geometryType)===e&&(null==(r=t.featureSet.features)?void 0:r.length)>0}))&&t}};Object(r.a)([Object(y.b)()],F.prototype,"description",void 0),Object(r.a)([Object(y.b)()],F.prototype,"featureCollections",void 0),Object(r.a)([Object(p.a)("service","featureCollections",["featureCollection.layers"])],F.prototype,"readFeatureCollections",null),Object(r.a)([Object(y.b)({type:u.a,json:{name:"lookAtExtent"}})],F.prototype,"fullExtent",void 0),Object(r.a)([Object(y.b)(f.c)],F.prototype,"id",void 0),Object(r.a)([Object(y.b)(f.e)],F.prototype,"legendEnabled",void 0),Object(r.a)([Object(y.b)({types:_,json:{write:!0}})],F.prototype,"lineSymbol",void 0),Object(r.a)([Object(y.b)({type:["show","hide"]})],F.prototype,"listMode",void 0),Object(r.a)([Object(y.b)({types:x,json:{write:!0}})],F.prototype,"pointSymbol",void 0),Object(r.a)([Object(y.b)({types:R,json:{write:!0}})],F.prototype,"polygonSymbol",void 0),Object(r.a)([Object(y.b)({type:["GeoRSS"]})],F.prototype,"operationalLayerType",void 0),Object(r.a)([Object(y.b)(f.n)],F.prototype,"url",void 0),Object(r.a)([Object(y.b)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],F.prototype,"title",null),Object(r.a)([Object(y.b)({readOnly:!0,json:{read:!1},value:"geo-rss"})],F.prototype,"type",void 0),F=Object(r.a)([Object(b.a)("esri.layers.GeoRSSLayer")],F);const E=F}}]);